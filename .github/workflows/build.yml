name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install dependencies and build
      run: |
        # A newer FreePascal compiler is needed than what ships with Ubuntu 20.04
        wget -q "https://downloads.sourceforge.net/project/freepascal/Linux/3.2.2/fpc-3.2.2.x86_64-linux.tar"
        tar xfv fpc-3.2.2.x86_64-linux.tar
        cd fpc-*-linux
        echo -e '/usr\nN\nN\nN\n' | sudo bash ./install.sh
        cd ..
        mkdir -p lib/x86_64-linux/ bin/Linux/
        bash -ex compile.sh
        # Convert dx7ii performances for testing
        wget -q "https://github.com/asb2m10/dexed/files/10782404/DX7IIfd.ROM1A.zip" # https://github.com/asb2m10/dexed/issues/165#issuecomment-1436586010
        unzip DX7IIfd.ROM1A.zip
        # TODO: Use "DX7IIfd ROM1A 1-32.syx" and "DX7IIfd ROM1A 33-64.syx" AMEM
        wget -q "https://yamahablackboxes.com/patches/dx7ii/voices/dx7iifdvoice32.syx"
        wget -q "https://yamahablackboxes.com/patches/dx7ii/voices/dx7iifdvoice64.syx"
        wget -q "https://yamahablackboxes.com/patches/dx7ii/performances/dx7iifdperf.syx"
        bin/Linux/MDX_PerfConv --info -a dx7iifdvoice32.syx -b dx7iifdvoice64.syx -p dx7iifdperf.syx
        bin/Linux/MDX_PerfConv -c -a dx7iifdvoice32.syx -b dx7iifdvoice64.syx -p dx7iifdperf.syx
        wget -q "https://yamahablackboxes.com/patches/dx7ii/voices/dx7iifdvoice32b.syx"
        wget -q "https://yamahablackboxes.com/patches/dx7ii/voices/dx7iifdvoice64b.syx"
        wget -q "https://yamahablackboxes.com/patches/dx7ii/performances/dx7iifdperfb.syx"
        bin/Linux/MDX_PerfConv --info -a dx7iifdvoice32b.syx -b dx7iifdvoice64b.syx -p dx7iifdperfb.syx
        bin/Linux/MDX_PerfConv -c -n 33 -a dx7iifdvoice32b.syx -b dx7iifdvoice64b.syx -p dx7iifdperfb.syx
        # TODO: Convert TX802 performances for testing
        # wget -q "http://hsjp.eu/downloads/Dexed/Dexed_cart_1.0.zip"
        # unzip -q Dexed_cart_1.0.zip
        # bin/Linux/MDX_PerfConv --info -a "./Dexed_cart_1.0/Original Yamaha/TX802/TX802BankA1.SYX" -b "./Dexed_cart_1.0/Original Yamaha/TX802/TX802BankB1.SYX" -p "./Dexed_cart_1.0/Original Yamaha/TX802/TX802_Factory_Performances.syx"
        # bin/Linux/MDX_PerfConv -c -n 65 -a "./Dexed_cart_1.0/Original Yamaha/TX802/TX802BankA1.SYX" -b "./Dexed_cart_1.0/Original Yamaha/TX802/TX802BankB1.SYX" -p "./Dexed_cart_1.0/Original Yamaha/TX802/TX802_Factory_Performances.syx"
        # wget "https://github.com/asb2m10/dexed/files/5360597/tx802bankb-fixed.zip"
        # unzip tx802bankb-fixed.zip
        ls -lh
        zip -r dx7iifd.zip *.ini
      shell: bash

    - name: Upload binary to artifacts
      uses: actions/upload-artifact@v2
      with:
        name: mdx_perfconv
        path: |
          bin/Linux/MDX_PerfConv
          dx7iifd.zip
        
    - name: Cleanup Old Releases
      if: github.ref == 'refs/heads/main'
      run: |
        old_release_id=$(curl -s -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" "https://api.github.com/repos/${{github.repository}}/releases" | jq -r '.[] | select(.tag_name == "continuous") | .id')
        if [[ -n "$old_release_id" ]]; then
          echo "Deleting old release..."
          curl -X DELETE -H "Authorization: Bearer ${{secrets.GITHUB_TOKEN}}" "https://api.github.com/repos/${{github.repository}}/releases/$old_release_id"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create or Update Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          bin/Linux/MDX_PerfConv
          dx7iifd.zip
        tag_name: continuous
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
